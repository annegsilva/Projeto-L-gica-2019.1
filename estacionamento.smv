MODULE main
VAR
  semaforo : boolean;
  proc1 : process user(semaforo);
  proc2 : process user(semaforo);
ASSIGN
  init(semaforo) := FALSE;
SPEC
  AG (proc1.state = entering -> AF proc1.state = critical)

MODULE user(semaforo)
VAR
  state : {idle,entering,critical,exiting};
ASSIGN
  init(state) := idle;
  next(state) := 
    case 
      state = idle : {idle,entering};
      state = entering & !semaforo : critical;
      state = critical : {critical,exiting};
      state = exiting : idle;
      TRUE : state;
    esac;
  next(semaforo) := 
    case
      state = entering : TRUE;
      state = exiting : FALSE;
      TRUE : semaforo;
    esac;
FAIRNESS
  running

MODULE portaria(semaforo)

VAR
	entrar: boolean;
	sair: boolean;
	morador: boolean;
	vagasmorador: 0 .. 20;
	vagasvisita: 0 .. 80;
	s1: boolean;
	s2: boolean;
	c1: boolean;
	c2: boolean;

ASSIGN
	init(entrar) := TRUE;
	init(sair) := TRUE;
	init(vagasmorador) := 20;
	init(vagasvisita) := 80;
	init(s1) := FALSE;
	init(s2) := FALSE;
	init(c1) := FALSE;
	init(c2) := FALSE;

MODULE saida(sair,vagasmorador, vagasvisita, s1, s2, c1, c2)

VAR
	status: {rua, semaforo1, cancela1, cancela2, semaforo2, estacionamento};

ASSIGN
	init(status) := semaforo2;
	
	next(status) := 
	case
		(status=semaforo2) & (sair=TRUE) & (s2=FALSE): semaforo2;
		(status=semaforo2) & (sair=TRUE) & (s2=TRUE): cancela2;
		(status=cancela2) & (sair=TRUE) & (c2=FALSE): cancela2;
		(status=cancela2) & (sair=TRUE) & (c2=TRUE): cancela1;
		(status=cancela1) & (sair=TRUE) & (c2=TRUE): cancela1;
		(status=cancela1) & (sair=TRUE) & (c2=FALSE) & (c1=TRUE): rua;
		(status=rua): semaforo2;
		TRUE: status;
	esac;
	next(c2) :=
	case
		(status = semaforo2) & (s2=FALSE): FALSE;
		(status = semaforo2) & (s2=TRUE): TRUE;
		(status = cancela1) & (sair=TRUE): FALSE;
		TRUE: c2;
	esac;
	next(c1) :=
	case
		(status = semaforo2) & (s2=TRUE): FALSE;
		(status = cancela1) & (sair=TRUE) & (c2=FALSE):TRUE;
		(status = rua): FALSE;
		TRUE: c1;
	esac;
	next(vagasmorador) :=
	case
		(status = rua) & (sair=TRUE) & (morador=TRUE): vagasmorador - 1;
		TRUE: vagasmorador;
	esac;
	next(vagasvisita) :=
	case
		(status = rua) & (sair=TRUE) & (morador=FALSE): vagasvisita - 1;
		TRUE: vagasvisita;
	esac;

MODULE entrada(entrar,vagasmorador, vagasvisita, s1, s2, c1, c2)

VAR
	status: {rua, semaforo1, cancela1, cancela2, semaforo2, estacionamento};

ASSIGN
	init(status) := semaforo1;
	
	next(status) :=
	case
		(status=semaforo1) & (entrar=TRUE) & (s1=FALSE): semaforo1;
		(status=semaforo1) & (entrar=TRUE) & (s1=TRUE): cancela1;
		(status=cancela1) & (entrar=TRUE) & (c1=FALSE): cancela1;
		(status=cancela1) & (entrar=TRUE) & (c1=TRUE): cancela2;
		(status=cancela2) & (entrar=TRUE) & (c1=TRUE): cancela2;
		(status=cancela2) & (entrar=TRUE) & (c1=FALSE) & (c2=TRUE): estacionamento;
		(status=estacionamento) : semaforo1;
		TRUE: status;
	esac;
	next(c1) :=
	case
		(status = semaforo1) & (s1=FALSE): FALSE;
		(status = semaforo1) & (s1=TRUE): TRUE;
		(status = cancela1) & (entrar=TRUE): TRUE;
		(status = cancela2) & (entrar=TRUE): FALSE;
		TRUE: c1;
	esac;
	next(c2) :=
	case
		(status = cancela2) & (entrar=TRUE) & (c1=FALSE): TRUE;
		(status = estacionamento): c1=FALSE;
		TRUE: c1;
	esac;
	next(vagasmorador) :=
	case
		(status = estacionamento) & (entrar=TRUE) & (morador=TRUE): vagasmorador + 1;
		TRUE: vagasmorador;
	esac;
	next(vagasvisita) :=
	case
		(status = estacionamento) & (entrar=TRUE) & (morador=FALSE): vagasvisita + 1;
		TRUE: vagasvisita;
	esac;